What happens when you initialize a repository? Why do you need to do it?

	A metadata directory ".git" is created in the current folder indicating that the new repository is created. Git doesn't commit any files to the repository automatically.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is a place where we can accumulate the files we change and which we want to group together into a commit. Working directory contains all the changed files which we may not want to group into a single commit. Staging area provides an intermediary step allowing us to group changed files into a single commit. 

How can you use the staging area to make sure you have one commit per logical
change?

	I can stage all logically related changes and commit them together.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If I need a create a new experimental feature which may or may not workout, I would create a new branch leaving the original code intact in the master branch. 

How do the diagrams help you visualize the branch structure?
	
	Diagrams provide the traceability for each of the branches. A visual representation of when a new branch started helps to identify which commit is part of which branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
